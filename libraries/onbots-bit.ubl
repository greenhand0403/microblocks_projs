module 'Onbots:bits'
author 'Znatok Tech.'
version 1 3 
depends 'LED Matrix 5x5' 
description 'Onbots:bits pinout
rows(1-5) 2 12 21 22 23
cols(1-5) 0 5 18 19 15
AMP Enable(high) 14
DAC 25
button A 36
button B 39
touch slide 32 27 13
DIN 16 17 32 33 27 13
DOUT 16 17 25 32 33 27 13
AIN 32 33 27 13
AOUT 25 32 33 27 13
'
variables anaOutputPins digPins anaPins touchPins touchPinsIdle touchPinsPress speakPin ampEnablePin buttonPins

  spec ' ' '_init_pins' 'init_pins'
  spec ' ' 'test_pins_func' 'test_pins_func'

to '_init_pins' {
  touchPins = ('[data:makeList]' 32 27 13)
  digPins = ('[data:makeList]' 32 16 17 25 33 27 13)
  anaPins = ('[data:makeList]' 32 25 33 27 13)
  anaOutputPins = ('[data:makeList]' 32 25 33 27 13)
  speakPin = 25
  ampEnablePin = 14
  buttonPins = ('[data:makeList]' 36 39)
  touchPinsIdle = (newList (size touchPins))
  touchPinsPress = (newList (size touchPins))
}

to 'test_pins_func' {
  '_init_pins'
  forever {
    if false {
      comment 'digital output'
      for i (size digPins) {
        sayIt (at i digPins)
        digitalWriteOp (at i digPins) true
        waitMillis 300
        digitalWriteOp (at i digPins) false
        waitMillis 300
      }
    }
    if false {
      comment 'analog output'
      for i (size anaOutputPins) {
        for j ('[data:makeList]' 0 0 650 1023 1023 650 0 0) {
          analogWriteOp (at i anaOutputPins) j
          sayIt (at i anaOutputPins) j
          waitMillis 1000
        }
      }
    }
    if false {
      comment 'digital input'
      var = ''
      for i (size digPins) {
        var = ('[data:join]' var ' D' (at i digPins) ':' (digitalReadOp (at i digPins)) '
')
      }
      sayIt var
      waitMillis 30
    }
    if false {
      comment 'analog input'
      var = ''
      for i (size anaPins) {
        var = ('[data:join]' var ' A' (at i anaPins) ':' (analogReadOp (at i anaPins)) '
')
      }
      sayIt var
      waitMillis 30
    }
    if false {
      comment 'button'
      sayIt (digitalReadOp 36) (digitalReadOp 39)
      waitMillis 30
    }
    if false {
      comment 'touch pins'
      local 'var' ''
      for i touchPins {
        var = ('[data:join]' var ' TPIN' i ':' ('[sensors:touchRead]' i) '
')
      }
      graphIt ('[sensors:touchRead]' (at 1 touchPins)) ('[sensors:touchRead]' (at 3 touchPins))
      sayIt var
      waitMillis 30
    }
  }
}

module 'LED Matrix 5x5' Output
author 'Znatok Tech.'
version 1 3 
choices led_imageMenu heart 'small heart' yes no happy sad confused angry asleep surprised silly fabulous meh 't-shirt' 'roller skate' duck house tortoise butterfly 'stick figure' ghost sword giraffe skull umbrella snake rabbit cow 'quarter note' 'eight note' pitchfork target triangle 'left triangle' 'chess board' diamond 'small diamond' square 'small square' scissors 
description 'A variant based on the original LED display library (author microblocks, version v1.13).

Use 10 GPIOs to control a 5-row, 5-column LED matrix

'
variables rows cols ledIntensity ledMatrixUpdateTime ledMatrixScrollTime _lastLEDMatrixUpdate _lastLEDMatrixScroll _curLEDMatrixShow _curLEDMatrixScrollCount _curLEDMatrixScrollBuffer _curLEDMatrixScrollBufferIndex _curLEDMatrixScrollBufferLen _curRowsIndex _curRowsData _curRowsUpdate 

  spec ' ' '_init_ledMatrixPins' 'init_ledMatrixPins'
  spec 'r' '_led_textData' '_led_textData'
  spec 'r' '_led_imageData' '_led_imageData'
  spec 'r' '_led_namedImage' '_led_namedImage _' 'menu.led_imageMenu' 'happy'
  space
  spec 'r' 'led_image' 'led image _' 'microbitDisplay' 15237440
  spec 'r' '_led_textImage' 'char _ image' 'str' 'a'
  space
  spec ' ' 'set_LED_matrix_single' 'set LED matrix single _ _ (on/off)' 'num bool' 1 true
  spec ' ' 'LED_matrix_show' 'LED matrix show _' 'num' 31761856
  spec ' ' 'LED_matrix_update' 'LED matrix update'
  spec 'r' '_get_LED_matrix_left_shift_result' 'LED matrix show _ left shift _ bit,reverse? _ mix with _' 'num num bool num' 31761856 1 false 33554431
  spec ' ' 'LED_matrix_show_scroll_string' 'LED matrix show string scroll _' 'str' '10'
  space
  spec ' ' 'test_LED_func' 'test_LED_func'

to LED_matrix_show foo {
  _curLEDMatrixShow = foo
}

to LED_matrix_show_scroll_string foo {
  if (0 == _curLEDMatrixScrollCount) {
    _curLEDMatrixScrollCount = 1
    _curLEDMatrixScrollBuffer = ('[data:join]' ' ' foo ' ')
    _curLEDMatrixScrollBufferInd = 1
    _curLEDMatrixScrollBufferLen = ((size _curLEDMatrixScrollBuffer) - 1)
  }
}

to LED_matrix_update {
  if (and (_curLEDMatrixScrollCount != 0) (((millisOp) - _lastLEDMatrixScroll) >= ledMatrixScrollTime)) {
    if (_curLEDMatrixScrollBufferInd <= _curLEDMatrixScrollBufferLen) {
      if (_curLEDMatrixScrollCount <= 6) {
        _curLEDMatrixShow = ('_get_LED_matrix_left_shift_result' ('_led_textImage' (at _curLEDMatrixScrollBufferInd _curLEDMatrixScrollBuffer)) (_curLEDMatrixScrollCount - 1) false ('_get_LED_matrix_left_shift_result' ('_led_textImage' (at (_curLEDMatrixScrollBufferInd + 1) _curLEDMatrixScrollBuffer)) (7 - _curLEDMatrixScrollCount) true 33554431))
        if (_curLEDMatrixScrollCount == 6) {
          _curLEDMatrixScrollCount = 1
          _curLEDMatrixScrollBufferInd += 1
        } else {
          _curLEDMatrixScrollCount += 1
        }
      }
    } else {
      _curLEDMatrixScrollCount = 0
    }
    _lastLEDMatrixScroll = (millisOp)
  }
  if (((millisOp) - _lastLEDMatrixUpdate) >= ledMatrixUpdateTime) {
    _curRowsData = (_curLEDMatrixShow >> (_curRowsIndex * 5))
    digitalWriteOp (at (_curRowsIndex + 1) rows) true
    for j 5 {
      digitalWriteOp (at j cols) ((_curRowsData & 1) == 0)
      _curRowsData = (_curRowsData >> 1)
    }
    if (((millisOp) - _lastLEDMatrixUpdate) >= (ledMatrixUpdateTime * 2)) {
      digitalWriteOp (at (_curRowsIndex + 1) rows) false
      for j 5 {
        digitalWriteOp (at j cols) true
      }
      _curRowsIndex = ((_curRowsIndex + 1) % 5)
      _lastLEDMatrixUpdate = (millisOp)
    }
  }
}

to '_get_LED_matrix_left_shift_result' foo bar baz quux {
  local 'ret' 0
  for i 5 {
    local 'row' ((foo >> (20 - (5 * (i - 1)))) & (hexToInt '1F'))
    local 'mix' ((quux >> (20 - (5 * (i - 1)))) & (hexToInt '1F'))
    if baz {
      row = (row << bar)
    } else {
      row = (row >> bar)
    }
    if (33554431 == quux) {
      row = (row & mix)
    } else {
      row = (row | mix)
    }
    ret = (ret | (row << (20 - (5 * (i - 1)))))
  }
  return ret
}

to '_init_ledMatrixPins' {
  _curRowsIndex = 0
  cols = ('[data:makeList]' 0 5 18 19 15)
  rows = ('[data:makeList]' 2 12 21 22 23)
  comment '行刷新时间'
  ledMatrixUpdateTime = 2
  comment '字符滚动显示间隔'
  ledMatrixScrollTime = 200
  comment '字符滚动计数'
  _curLEDMatrixScrollCount = 0
  _curLEDMatrixScrollBuffer = 0
  _curLEDMatrixScrollBufferInd = 0
  _curLEDMatrixScrollBufferLen = 0
  for j 5 {
    digitalWriteOp (at j rows) false
    digitalWriteOp (at j cols) true
  }
}

to '_led_imageData' {
  return 'heart:4685802,small heart:145728,yes:2269696,no:18157905,happy:15237440,sad:18284864,confused:22348096,angry:23036241,asleep:459616,surprised:4526090,silly:25984017,fabulous:15008639,meh:2236443,t-shirt:15154043,roller skate:11534104,duck:489702,house:10976708,tortoise:359872,butterfly:29332475,stick figure:18158564,ghost:23068334,sword:4657284,giraffe:10946627,skull:15171246,umbrella:6460398,snake:469859,rabbit:16104613,cow:4685361,quarter note:7573636,eight note:7590276,pitchfork:4357813,target:4681156,triangle:1026176,left triangle:32805985,chess board:11184810,diamond:4539716,small diamond:141440,square:33080895,small square:469440,scissors:20287859,'
}

to '_led_namedImage' name {
  local 'data' ('_led_imageData')
  local 'i' ('[data:find]' name data)
  if (i == -1) {
    comment 'Name not found'
    return 0
  }
  local 'start' (('[data:find]' ':' data i) + 1)
  local 'end' (('[data:find]' ',' data i) - 1)
  return ('[data:convertType]' ('[data:copyFromTo]' data start end) 'number')
}

to '_led_textData' {
  return 'a:31761856,b:7642145,c:14714304,d:14989576,e:14720294,f:2169932,g:6568238,h:9739297,i:2164738,j:6561800,k:9604257,l:12650562,m:18405216,n:9741536,o:6595776,p:1287392,q:8857024,r:1082816,s:3279232,t:29440066,u:31761696,v:4539936,w:29017632,x:9640224,y:3287584,z:15798752,A:9747750,B:7642407,C:14713902,D:7644455,E:15768623,F:1088559,G:15262766,H:9747753,I:7407687,J:6594847,K:9604265,L:15762465,M:18405233,N:18667121,O:6595878,P:1088807,Q:12789030,R:18128167,S:7608366,T:4329631,U:6595881,V:4539953,W:18732593,X:9738537,Y:4329809,Z:15763599,'
}

to '_led_textImage' s {
  local 'data' ('_led_textData')
  if (s == '.') {
    return 65536
  }
  if (s == '/') {
    return 1118480
  }
  if (s == '$') {
    return 15514222
  }
  if (s == '%') {
    return 26808627
  }
  if (s == '!') {
    return 2099266
  }
  if (s == ':') {
    return 65600
  }
  if (s == '?') {
    return 4207150
  }
  if (s == '1') {
    return 14815428
  }
  if (s == '2') {
    return 15767815
  }
  if (s == '3') {
    return 6590735
  }
  if (s == '4') {
    return 9413964
  }
  if (s == '5') {
    return 16268351
  }
  if (s == '6') {
    return 15251592
  }
  if (s == '7') {
    return 1118495
  }
  if (s == '8') {
    return 15252014
  }
  if (s == '9') {
    return 2243118
  }
  if (s == '0') {
    return 6595878
  }
  if (s == ',') {
    return 2228224
  }
  if (s == ' ') {
    return 0
  }
  local 'i' ('[data:find]' s data)
  if (i == -1) {
    comment 'Character not found'
    return 0
  }
  local 'start' (('[data:find]' ':' data i) + 1)
  local 'start' (('[data:find]' ':' data i) + 1)
  local 'end' (('[data:find]' ',' data i) - 1)
  return ('[data:convertType]' ('[data:copyFromTo]' data start end) 'number')
}

to led_image twentyFiveBitInt {
  comment 'An LED image is a 25-bit integer'
  return twentyFiveBitInt
}

to set_LED_matrix_single LEDIndex isOn {
  local 'r' (((LEDIndex - 1) / 5) + 1)
  local 'c' (((LEDIndex - 1) % 5) + 1)
  digitalWriteOp (at r rows) isOn
  if (('[data:find]' LEDIndex ('[data:makeList]' 6 11 16 21)) != -1) {
    for i 4 {
      digitalWriteOp (at (i + 1) cols) isOn
    }
  } else {
    digitalWriteOp (at c cols) (not isOn)
  }
}

to test_LED_func {
  '_init_ledMatrixPins'
  if false {
    comment '5x5 led matrix'
    for i (size rows) {
      digitalWriteOp (at i rows) true
      for j (size cols) {
        sayIt i j
        digitalWriteOp (at j cols) false
        waitMillis 200
        digitalWriteOp (at j cols) true
      }
      digitalWriteOp (at i rows) false
    }
  } else {
    LED_matrix_show_scroll_string 'helloworld'
  }
}

